<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="ADMIN" failures="0" tests="2" name="ChromeTest" time="0.185" errors="0" timestamp="2022-03-26T19:22:36 IST">
  <testcase classname="testClasses.AddNewAddress" name="@BeforeClass beforeclass" time="-1.648302756139E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest&amp;gt; into a @BeforeClass annotated beforeclass.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest> into a @BeforeClass annotated beforeclass.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 13 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass beforeclass -->
  <testcase classname="testClasses.AddNewAddress" name="@BeforeClass beforeclass" time="-1.648302756139E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest&amp;gt; into a @BeforeClass annotated beforeclass.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest> into a @BeforeClass annotated beforeclass.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 13 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass beforeclass -->
  <testcase classname="testClasses.AddNewAddress" name="@BeforeMethod beforemethod" time="-1.648302756192E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforemethod -->
  <testcase classname="testClasses.AddNewAddress" name="@BeforeMethod beforemethod" time="-1.648302756192E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforemethod -->
  <testcase classname="testClasses.AddNewAddress" name="@AfterMethod afterMethod" time="-1.648302756243E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testClasses.AddNewAddress" name="@AfterMethod afterMethod" time="-1.648302756251E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testClasses.AddNewAddress" name="@BeforeMethod beforemethod" time="-1.648302756255E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforemethod -->
  <testcase classname="testClasses.AddNewAddress" name="@AfterMethod afterMethod" time="-1.648302756268E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testClasses.AddNewAddress" name="@BeforeMethod beforemethod" time="-1.648302756258E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforemethod -->
  <testcase classname="testClasses.AddNewAddress" name="@AfterClass afterClass" time="-1.648302756273E9">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="testClasses.AddNewAddress" name="@AfterMethod afterMethod" time="-1.648302756312E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testClasses.AddNewAddress" name="@AfterClass afterClass" time="-1.648302756319E9">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="testClasses.AddNewAddress" name="VerifyUserCanLogIn" time="0.0">
    <skipped/>
  </testcase> <!-- VerifyUserCanLogIn -->
  <testcase classname="testClasses.AddNewAddress" name="UserCanAddNewAddress" time="0.0">
    <skipped/>
  </testcase> <!-- UserCanAddNewAddress -->
</testsuite> <!-- ChromeTest -->
